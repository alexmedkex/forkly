# 1. Copy this file to `env-overrides.sh` if you want to have custom env values for your local env
# 2. Follow the steps in the use cases that you need

remote_host=172.25.57.35

# Use case #1: Connect to a remote server with Blockchain
# -------------------------------------------------------
#
# On the remote host
# * Run `kg up quorum-common`
# * Make sure port `22001` and `22002` is accessible in your network
# * Run this command to find ENS_OWNER_ADDRESS and copy the value:
#   echo 0x`gawk "NR==6" .db/qdata_2/genesis.json | tr -d ':" {'`
#
# On the local host
# * Copy `env-overrides.sh.sample` to `env-overrides.sh`
# * Uncomment the exports below and change the remote_host value
# * Delete `.db/contracts` and `komgo-member-blockchain/address.txt`
# * Run `kg up blockchain` on and save ENSRegistry address to `komgo-member-blockchain/address.txt`
# * Remove `.db/mongodata_1`, run `kg update-app-state`, and re-onboard a member node(s)

# export ENS_OWNER_ADDRESS=<Value copied from the remote host>
# export BLOCKCHAIN_HOST=$remote_host


# Use case #2: Connect to a remote server with Common MQ
# ------------------------------------------------------
#
# On the remote host
# * Run `kg up rabbitmq-common`
# * Run `kg configure-common-mq`
# * Make sure port `15673` is accessible in your network
#
# On your local host
# * Change `remote_host` value and uncomment the line below
# * (Optional) If someone else is going to be using Common MQ server,
#   set new UUIDs for staticId and komgoMnid in onboarding-files/member-(1 and 2)/member-package.json
#   You can use `uuidgen` command to generate a UUID
# * Remove `.db/mongodata_1` and re-onboard a member node(s)

# export COMMON_MQ_BASE_URL=http://${remote_host}:15673
# export COMMON_MQ_HOSTNAME=$remote_host

# Use case #3: Disable Vault for local env
# ----------------------------------------
# Uncomment the line below

# export VAULT_BASE_URL=
