// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AcceptQuoteContainer renders correctly 1`] = `
.c11 > .field {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c11 > .field > label {
  width: 100%;
  font-weight: bold;
}

.c11 > .field .field {
  margin: 1rem 1rem 1rem 0;
}

.c11 > .field .field .ui.radio.checkbox label {
  line-height: calc(18px * 1.15);
}

.c9.c9.c9 {
  margin: 15px 0 35px 0;
}

.c9.c9.c9 > label {
  font-weight: bold;
}

.c0 {
  background-color: #f2f5f8;
  height: 100vh;
  overflow-y: scroll;
  width: 100%;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  height: 100vh;
}

.c16.c16.c16 {
  color: #5d768f;
  font-size: 1rem;
  font-weight: 600;
  line-height: 21px;
  width: auto;
  text-align: left;
  margin: 24px 0 0 0;
}

.c10.c10.c10 {
  -webkit-transition: 0.5s;
  -moz-transition: 0.5s;
  -o-transition: 0.5s;
  -webkit-transition: 0.5s;
  transition: 0.5s;
  opacity: 0;
  visibility: hidden;
  margin: 0px 0px 0px 0px;
  height: 0px;
}

.c10.c10.c10.show {
  margin: -15px 0px 0px 0px;
  opacity: 1;
  visibility: visible;
  height: 2rem;
}

.c10.c10.c10 p {
  color: #5d768f;
  font-size: 14px;
  line-height: 21px;
}

.c12 {
  margin: 0px 0px 5px 0px;
  font-weight: bold;
}

.c15 {
  text-transform: uppercase;
  color: #5d768f;
  font-size: 11px;
  margin: 0px 0px 8px 0px;
}

.c13 {
  list-style-type: none;
  padding: 0px;
  margin: 10px 0px 0px 0px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c14 {
  margin: 0px;
  padding: 0px 20px 0px 0px;
}

.c8.c8.c8 {
  margin: 1.5em 0 1.75em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  font-family: LotaGrotesque;
  background-color: #ffffff;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 24px;
  margin: 0;
}

.c3 {
  border-top: 1px solid rgba(192,207,222,0.5);
  border-bottom: 1px solid rgba(192,207,222,0.5);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex: 2;
  -webkit-flex-grow: 2;
  -ms-flex-positive: 2;
  flex-grow: 2;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding-left: 24px;
  -webkit-box-pack: start;
  -webkit-justify-content: start;
  -ms-flex-pack: start;
  justify-content: start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 15px;
  padding: 16px 16px 16px 0;
}

.c4 > p {
  color: #1c2936;
  font-size: 11px;
  font-weight: bold;
  line-height: 21px;
  margin: 0 0.35rem 0 0;
  text-transform: uppercase;
}

.c4 > span {
  padding-top: 4px !important;
}

.c4:last-child {
  margin-right: 0;
}

.c18.c18.c18 {
  position: fixed;
  left: 0px;
  bottom: 0px;
  height: 68px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  padding-top: calc((68px - 32px) / 2);
  padding-bottom: calc((68px - 32px) / 2);
  width: calc(100% - 220px);
  padding-right: 38px;
  border-top: 1px solid #dbe5ec;
  background: white;
  margin-left: 220px;
}

.c17 {
  width: calc(100% - 220px);
  margin-left: 220px;
  margin-top: 68px;
}

.c7 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  background-color: white;
  padding: 16px 24px 24px 24px;
}

.c5.c5.c5 {
  color: white;
}

<div
  className="c0"
>
  <div
    className="c1"
    data-test-id="topbar-container"
  >
    <div
      className="c2"
    >
      <h1
        className="ui header"
        data-test-id="topbar-header-container"
        style={
          Object {
            "margin": 0,
          }
        }
      >
        Review quote and submit agreed terms
      </h1>
    </div>
    <div
      className="row c3"
      data-test-id="topbar-infos-container"
    >
      <div
        className="c4"
      >
        <p>
          STATUS: 
        </p>
        <span
          className="ui label c5"
          data-test-id="rd-status-span"
          onClick={[Function]}
        >
          Pending request
        </span>
      </div>
      <div
        className="c4"
      >
        <p>
          trade Id
          : 
        </p>
        <p
          data-test-id="topbar-trade-id-value"
        >
          E111
        </p>
      </div>
      <div
        className="c4"
      >
        <p>
          type
          : 
        </p>
        <p
          data-test-id="topbar-type-value"
        >
          Discount without recourse
        </p>
      </div>
      <div
        className="c4"
      >
        <p>
          buyer
          : 
        </p>
        <p
          data-test-id="topbar-buyer-value"
        />
      </div>
    </div>
  </div>
  <div
    className="c6"
  >
    <div
      className="c7"
    >
      <p
        className="c8"
        data-test-id="request-header-text"
      >
        Enter agreed terms to accept 
        receivable discounting
         quote from 
        <strong>
          A-BANK-NAME
           
        </strong>
        for 
        <strong>
          trade ID 
          E111
        </strong>
        .
      </p>
      <form
        className="ui form"
        data-test-id="trader-accept-quote-form"
        id="trader-accept-quote-form"
        onSubmit={[Function]}
      >
        <div
          className="c9"
        >
          <label>
            Advance rate
          </label>
          <div
            className="field"
            style={
              Object {
                "marginBottom": "20px",
              }
            }
          >
            <div
              className="ui right labeled input"
              data-test-id="advanceRate"
              style={
                Object {
                  "width": "50%",
                }
              }
            >
              <input
                name="advanceRate"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                step="0.01"
                type="number"
                value={10}
              />
              <div
                className="ui basic label label"
                onClick={[Function]}
                style={
                  Object {
                    "borderBottomRightRadius": ".21428571rem",
                    "borderTopRightRadius": ".21428571rem",
                    "height": "32px",
                    "paddingTop": "8px",
                  }
                }
              >
                %
              </div>
            </div>
          </div>
          <div
            className="c10"
          >
            <p
              data-test-id="advanceRate-proposal-label"
            >
              A-BANK-NAME proposed: 10%
            </p>
          </div>
        </div>
        <div
          className="c9"
        >
          <div
            className="c11"
          >
            <div
              className="field"
            >
              <label
                id="field_pricingType"
              >
                Pricing type
              </label>
              <div
                className="field"
              >
                <div
                  className="ui checked radio checkbox"
                  data-test-id="pricingType_ALL_IN"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onMouseDown={[Function]}
                >
                  <input
                    checked={true}
                    className="hidden"
                    onClick={[Function]}
                    readOnly={true}
                    tabIndex={0}
                    type="radio"
                  />
                  <label>
                    All in pricing
                  </label>
                </div>
              </div>
              <div
                className="field"
              >
                <div
                  className="ui radio checkbox"
                  data-test-id="pricingType_SPLIT"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onMouseDown={[Function]}
                >
                  <input
                    checked={false}
                    className="hidden"
                    onClick={[Function]}
                    readOnly={true}
                    tabIndex={0}
                    type="radio"
                  />
                  <label>
                    Split
                  </label>
                </div>
              </div>
              <div
                className="field"
              >
                <div
                  className="ui radio checkbox"
                  data-test-id="pricingType_FLAT_FEE"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onMouseDown={[Function]}
                >
                  <input
                    checked={false}
                    className="hidden"
                    onClick={[Function]}
                    readOnly={true}
                    tabIndex={0}
                    type="radio"
                  />
                  <label>
                    Flat fee
                  </label>
                </div>
              </div>
            </div>
          </div>
          <label>
            All in
          </label>
          <div
            className="field"
            style={
              Object {
                "marginBottom": "20px",
              }
            }
          >
            <div
              className="ui right labeled input"
              data-test-id="pricingAllIn"
              style={
                Object {
                  "width": "50%",
                }
              }
            >
              <input
                name="pricingAllIn"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                step="0.01"
                type="number"
                value={0.5}
              />
              <div
                className="ui basic label label"
                onClick={[Function]}
                style={
                  Object {
                    "borderBottomRightRadius": ".21428571rem",
                    "borderTopRightRadius": ".21428571rem",
                    "height": "32px",
                    "paddingTop": "8px",
                  }
                }
              >
                %
              </div>
            </div>
          </div>
          <div
            className="c10"
          >
            <p
              data-test-id="pricingAllIn-proposal-label"
            >
              A-BANK-NAME proposed: 0.5%
            </p>
          </div>
          <label>
            Days of discounting
          </label>
          <div
            className="inline field"
            style={
              Object {
                "marginBottom": "20px",
              }
            }
          >
            <span
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              style={
                Object {
                  "display": "inline-block",
                  "width": "50%",
                }
              }
            >
              <div
                className="ui input"
                data-test-id="numberOfDaysDiscounting"
                style={
                  Object {
                    "width": "100%",
                  }
                }
              >
                <input
                  name="numberOfDaysDiscounting"
                  onBlur={[Function]}
                  onChange={[Function]}
                  step="1"
                  type="number"
                  value={80}
                />
              </div>
            </span>
          </div>
          <div
            className="c10"
          >
            <p
              data-test-id="numberOfDaysDiscounting-proposal-label"
            >
              A-BANK-NAME proposed: 80 days
            </p>
          </div>
        </div>
        <div
          className="c9"
        >
          <div
            className="c12"
          >
            Interest
          </div>
          <ul
            className="c13"
            data-test-id="interest-data"
          >
            <li
              className="c14"
            >
              <p
                className="c15"
              >
                Interest type
              </p>
              <p>
                COF
              </p>
            </li>
            <li
              className="c14"
            >
              <p
                className="c15"
              >
                Indicative COF as of 2019/01/31
              </p>
              <p>
                5.50%
              </p>
            </li>
          </ul>
        </div>
        <div
          className="c9"
        >
          <div
            className="c12"
          >
            Fee calculation based on
          </div>
          <p
            data-test-id="feeCalculationType-data"
          >
            Straight discount
          </p>
        </div>
        <label
          style={
            Object {
              "display": "block",
              "fontWeight": "bold",
            }
          }
        >
          Comment (optional)
        </label>
        <textarea
          data-test-id="comment"
          name="comment"
          onBlur={[Function]}
          onChange={[Function]}
          onInput={[Function]}
          rows={3}
          style={
            Object {
              "background": undefined,
              "border": undefined,
              "resize": "",
              "width": "50%",
            }
          }
          value=""
        />
        <p
          className="c16"
          data-test-id="accept-quote-section-status-text"
          fontSize="1rem"
        >
          The agreed terms are not legally binding
        </p>
      </form>
    </div>
  </div>
  <div
    className="c17"
  />
  <div
    className="c18"
  >
    <button
      className="ui button"
      data-test-id="trader-accept-quote-cancel-btn"
      onClick={[Function]}
      role="button"
    >
      Cancel
    </button>
    <button
      className="ui primary button"
      data-test-id="trader-accept-quote-submit-btn"
      form="trader-accept-quote-form"
      onClick={[Function]}
      role="button"
      type="submit"
    >
      Accept quote and submit final agreed terms
    </button>
  </div>
</div>
`;
