import { ErrorCode } from '@komgo/error-utilities'

import BlockchainConnectionException from './BlockchainConnectionException'
import BlockchainTransactionException from './BlockchainTransactionException'

export const ErrorNames = {
  TimerFetchFailed: 'TimerFetchFailed',
  GetDocumentsFailed: 'GetDocumentsFailed',
  FindLCFailed: 'FindLCFailed',
  InvalidCompanyRole: 'InvalidCompanyRole',
  InvalidLCTransition: 'InvalidLCTransition',
  InvalidLCStatus: 'InvalidLCStatus',
  InvalidActionDirectLCAdvising: 'InvalidActionDirectLCAdvising',
  InvalidActionDirectLCRejectAdvising: 'InvalidActionDirectLCRejectAdvising',
  SignerPostConnectionFailed: 'SignerPostConnectionFailed',
  SignerGetKeyFailed: 'SignerGetKeyFailed',
  SignerSignTxFailed: 'SignerSignTxFailed',
  GetDocumentByIdFailed: 'GetDocumentByIdFailed',
  GetDocumentContentFailed: 'GetDocumentContentFailed',
  SaveLCDatabaseFailed: 'SaveLCDatabaseFailed',
  GetNodeKeysFailed: 'GetNodeKeysFailed',
  NodeKeysNotFound: 'NodeKeysNotFound',
  InconsistentNodeKeys: 'InconsistentNodeKeys',
  GetTradeFailed: 'GetTradeFailed',
  LCFindOneFailed: 'LCFindOneFailed',
  ParentLCNotFound: 'ParentLCNotFound',
  EmptyMandatoryParties: 'EmptyMandatoryParties',
  LCAmendmentCreateInvalid: 'LCAmendmentCreateInvalid',
  LCAmendmentCreateDatabaseConnectionFailed: 'LCAmendmentCreateDatabaseConnectionFailed',
  LCAmendmentGetDatabaseConnectionFailed: 'LCAmendmentGetDatabaseConnectionFailed',
  EmptySignatureError: 'EmptySignatureError',
  DocumentRegistrationFailed: 'DocumentRegistrationFailed',
  LCAmendmentApproveInvalidParty: 'LCAmendmentApproveInvalidParty',
  LCAmendmentRejectInvalidParty: 'LCAmendmentRejectInvalidParty',
  LCPresentationInvalidParcelId: 'LCPresentationInvalidParcelId',
  LCPresentationSaveFailed: 'LCPresentationSaveFailed',
  LCPresentationGetByIdFailed: 'LCPresentationGetByIdFailed',
  LCPresentationDeleteByIdFailed: 'LCPresentationDeleteByIdFailed',
  LCPresentationDeleteDocumentByIdFailed: 'LCPresentationDeleteDocumentByIdFailed',
  LCPresentationDeleteFailed: 'LCPresentationDeleteFailed',
  LCPresentationDeleteDocumentFailed: 'LCPresentationDeleteDocumentFailed',
  LCPresentationCheckSignatureFailed: 'LCPresentationCheckSignatureFailed',
  LCPresentationGetReceivedDocumentsFailed: 'LCPresentationGetReceivedDocumentsFailed',
  GetMemberFailed: 'GetMemberFailed',
  MemberNotFound: 'MemberNotFound',
  ProcessingLCPresentationEventFailed: 'ProcessingLCPresentationEventFailed',
  InvalidEventProcessor: 'InvalidEventProcessor',
  EventProcessorNotFound: 'EventProcessorNotFound',
  ApiDocumentsDeleteEndpointFailed: 'ApiDocumentsDeleteEndpointFailed',
  ApiDocumentsSendingEndpointFailed: 'ApiDocumentsSendingEndpointFailed',
  ApiDocumentsSendFeedbackFailed: 'ApiDocumentsSendFeedbackFailed',
  ApiDocumentsGetFeedbackFailed: 'ApiDocumentsGetFeedbackFailed',
  BlockchainEventNotFound: 'BlockchainEventNotFound',
  LCEventDecodingFailed: 'LCEventDecodingFailed',
  LCEventServiceNotFound: 'LCEventServiceNotFound',
  DocumentNotFound: 'DocumentNotFound',
  LCAmendmentUpdateFailed: 'LCAmendmentUpdateFailed',
  LCAmendmentEventDecodeFailed: 'LCAmendmentEventDecodeFailed',
  LCAmendmentEventAddressNotFound: 'LCAmendmentEventAddressNotFound',
  LCPresentationByAddressNotFound: 'LCPresentationByAddressNotFound',
  LCPresentationEventDecodeFailed: 'LCPresentationEventDecodeFailed',
  LCPresentationEventAddressNotFound: 'LCPresentationEventAddressNotFound',
  LCPresentationEventProcessorNotFound: 'LCPresentationEventProcessorNotFound',
  SBLCDecodeEventFailed: 'SBLCDecodeEventFailed',
  SBLCEventAddressNotFound: 'SBLCEventAddressNotFound',
  LCInvalidStatus: 'LCInvalidStatus',
  ReadInternalMQEventsFailed: 'ReadInternalMQEventsFailed',
  MessageProcessorNotFound: 'MessageProcessorNotFound',
  CompanyNotFound: 'CompanyNotFound',
  SBLCNotFound: 'SBLCNotFound',
  LCSendNotificationFailed: 'LCSendNotificationFailed',
  LCTaskProcessorCompanyNotFound: 'LCTaskProcessorCompanyNotFound',
  TimerServiceSaveTimerFailed: 'TimerServiceSaveTimerFailed',
  TimerServiceDeactivateTimerFailed: 'TimerServiceDeactivateTimerFailed',
  GetTradeByVaktFailed: 'GetTradeByVaktFailed',
  GetCargoByTradeFailed: 'GetCargoByTradeFailed',
  DiscardTradeDocumentProcessorDocumentNotFound: 'DiscardTradeDocumentProcessorDocumentNotFound',
  DiscardTradeDocumentProcessorDeleteDocumentFailed: 'DiscardTradeDocumentProcessorDeleteDocumentFailed',
  DicardedDocumentCreateNotificationFailed: 'DicardedDocumentCreateNotificationFailed',
  TradeDocumentProcessorLCNotFound: 'TradeDocumentProcessorLCNotFound',
  TradeDocumentProcessorParcelNotFound: 'TradeDocumentProcessorParcelNotFound',
  TradeDocumentProcessorCompanyNotParty: 'TradeDocumentProcessorCompanyNotParty',
  TradeDocumentProcessorCommercialDocumentFailed: 'TradeDocumentProcessorCommercialDocumentFailed',
  TradeDocumentProcessorDocumentNotFound: 'TradeDocumentProcessorDocumentNotFound',
  TradeDocumentProcessorNotificationFailed: 'TradeDocumentProcessorNotificationFailed',
  TradeDocumentProcessorTradeCargoNotFound: 'TradeDocumentProcessorTradeCargoNotFound',
  LCAmendmentDataAgentGetByAddressFailed: 'LCAmendmentDataAgentGetByAddressFailed',
  UpdateLCByReferenceFailed: 'UpdateLCByReferenceFailed',
  LCUpdateFieldFailed: 'LCUpdateFieldFailed',
  LCUpdateStatusFailed: 'LCUpdateStatusFailed',
  LCGetCounterAndUpdateFailed: 'LCGetCounterAndUpdateFailed',
  SaveSBLCFailed: 'SaveSBLCFailed',
  GetSBLCFailed: 'GetSBLCFailed',
  SBLCGetByContractAddressFailed: 'SBLCGetByContractAddressFailed',
  UpdateSBLCFailed: 'UpdateSBLCFailed',
  GetMembersByNodeFailed: 'GetMembersByNodeFailed',
  GetMembersByStaticIdFailed: 'GetMembersByStaticIdFailed',
  InvalidLCAmendment: 'InvalidLCAmendment',
  BlockchainConnectionError: 'BlockchainConnectionError',
  BlockchainTransactionError: 'BlockchainTransactionError',
  UploadFailed: 'UploadFailed',
  EventAddressNotFound: 'EventAddressNotFound',
  ProcessorForStateTransitionNotFound: 'ProcessorForStateTransitionNotFound',
  DataUpdatedServiceNotFound: 'DataUpdatedServiceNotFound',
  NoTaskFoundForResolving: 'NoTaskFoundForResolving',
  NoTaskFoundForResolvingTodoOrPending: 'NoTaskFoundForResolvingTodoOrPending',
  LCAmendmentEventServiceNotFound: 'LCAmendmentEventServiceNotFound',
  LCAmendmentTransitionEventServiceNotFound: 'LCAmendmentTransitionEventServiceNotFound',
  LCPresentationStateProcessorNotFound: 'LCPresentationStateProcessorNotFound',
  SBLCEventServiceNotFound: 'SBLCEventServiceNotFound',
  LCPresentationDocumentNotFound: 'LCPresentationDocumentNotFound',
  LCPresentationDeleteDocumentWarning: 'LCPresentationDeleteDocumentWarning',
  StopServerFailed: 'StopServerFailed',
  LCAmendmentNotFound: 'LCAmendmentNotFound',
  CreateSBLCValidationError: 'CreateSBLCValidationError',
  CreateLetterOfCreditValidationError: 'CreateLetterOfCreditValidationError',
  SBLCControllerSBLCNotFound: 'SBLCControllerSBLCNotFound',
  LCTransactionManagerLCNotFound: 'LCTransactionManagerLCNotFound',
  LCTransactionManagerLCPartiesNotFound: 'LCTransactionManagerLCPartiesNotFound',
  SBLCTransactionManagerSBLCNotFound: 'SBLCTransactionManagerSBLCNotFound',
  LetterOfCreditTransactionManagerLetterOfCreditNotFound: 'LetterOfCreditTransactionManagerLetterOfCreditNotFound',
  LetterOfCreditTransactionManagerLetterOfCreditPartiesNotFound:
    'LetterOfCreditTransactionManagerLetterOfCreditPartiesNotFound',
  SBLCTransactionManagerSBLCPartiesNotFound: 'SBLCTransactionManagerSBLCPartiesNotFound',
  LCPresentationReviewServiceDocumentNotFound: 'LCPresentationReviewServiceDocumentNotFound',
  LCPresentationReviewServiceSendDocumentFailed: 'LCPresentationReviewServiceSendDocumentFailed',
  LCAmendmentUseCaseAmendmentNotFound: 'LCAmendmentUseCaseAmendmentNotFound',
  LCAmendmentUseCaseLCNotFound: 'LCAmendmentUseCaseLCNotFound',
  LCPresentationUpdateFailed: 'LCPresentationUpdateFailed',
  LCDocumentManagerDocumentNotFound: 'LCDocumentManagerDocumentNotFound',
  LCDocumentManagerDocumentShareFailed: 'LCDocumentManagerDocumentShareFailed',
  FindSBLCFailed: 'FindLCFailed',
  MissingFileExtension: 'MissingFileExtension',
  LCPartiesNotFound: 'LCPartiesNotFound',
  FindAllSBLCPartiesSBLCNotFound: 'FindAllSBLCPartiesSBLCNotFound',
  SBLCPartiesNotFound: 'SBLCPartiesNotFound',
  DocumentEventProcessorNotFound: 'DocumentEventProcessorNotFound',
  TradeEventTradeNotFound: 'TradeEventTradeNotFound',
  TradeEventCargoNotFound: 'TradeEventCargoNotFound',
  TradeEventTradeNotSupported: 'TradeEventTradeNotSupported',
  TradeEventCargoNotSupported: 'TradeEventCargoNotSupported',
  TradeEventUnexpectedRoutingKey: 'TradeEventUnexpectedRoutingKey',
  TradeCargoClientGetTradeByVaktFailed: 'TradeCargoClientGetTradeByVaktFailed',
  LCAmendmentSchemaValidationFailed: 'LCAmendmentSchemaValidationFailed',
  LCCacheDataAgentUpdateFieldFailed: 'LCCacheDataAgentUpdateFieldFailed',
  LCCacheDataAgentUpdateStatusFailed: 'LCCacheDataAgentUpdateStatusFailed',
  LCCacheDataAgentGetNonceFailed: 'LCCacheDataAgentGetNonceFailed',
  GetTradeCargoBySourceAndSourceIdFailed: 'GetTradeCargoBySourceAndSourceIdFailed',
  GetTradeBySourceAndSourceId: 'GetTradeBySourceAndSourceId',
  SBLCUpdateFailed: 'SBLCUpdateFailed',
  GetCounterAndUpdateFailed: 'GetCounterAndUpdateFailed',
  SBLCServiceGetSBLCFailed: 'SBLCServiceGetSBLCFailed',
  SBLCServiceDeleteDocumentFailed: 'SBLCServiceDeleteDocumentFailed',
  SBLCShareDocumentDocumentNotFound: 'SBLCDocumentNotFound',
  SBLCDeleteDocumentFailed: 'SBLCDeleteDocumentFailed',
  SBLCGetDocumentDocumentNotFound: 'SBLCGetDocumentDocumentNotFound',
  SBLCTransitionEventServiceNotFound: 'SBLCTransitionEventServiceNotFound',
  TradeInstrumentValidationServiceTradeNotFound: 'TradeInstrumentValidationServiceTradeNotFound',
  TradeInstrumentValidationServiceValidateBySourceIdFailedSBLCExists:
    'TradeInstrumentValidationServiceValidateBySourceIdFailedSBLCExists',
  TradeInstrumentValidationServiceValidateBySourceIdFailedLCExists:
    'TradeInstrumentValidationServiceValidateBySourceIdFailedLCExists',
  SBLCControllerInvalidInstrument: 'SBLCControllerInvalidInstrument',
  SBLCDataUpdatedEventServiceFieldNotSupported: 'SBLCDataUpdatedEventServiceFieldNotSupported',
  UnexpectedError: 'UnexpectedError',
  LCPresentationMarkPresentationFailed: 'LCPresentationMarkPresentationFailed',
  RunServerFailed: 'RunServerFailed',
  LCActionExecuteUseCaseFailed: 'LCActionExecuteUseCaseFailed',
  LetterOfCreditCreatedServiceNoLCFound: 'LetterOfCreditCreatedServiceNoLCFound',
  LetterOfCreditCreatedServiceDatabaseConnection: 'LetterOfCreditCreatedServiceDatabaseConnection',
  PublishLetterOfCreditToMQFailed: 'PublishLetterOfCreditToMQFailed',
  LetterOfCreditEventHashInvalid: 'LetterOfCreditEventHashInvalid',
  LetterOfCreditNotFoundAsApplicant: 'LetterOfCreditNotFoundAsApplicant',
  PublishMessageFailed: 'PublishMessageFailed',
  LetterOfCreditMessageHashInvalid: 'LetterOfCreditMessageHashInvalid',
  LetterOfCreditDataProcessorDatabaseConnection: 'LetterOfCreditDataProcessorDatabaseConnection',
  EventProcessingLetterOfCreditFailed: 'EventProcessingLetterOfCreditFailed',
  LetterOfCreditTaskManagerFailed: 'LetterOfCreditTaskManagerFailed',
  PartyActionsProcessorFailed: 'PartyActionsProcessorFailed',
  LetterOfCreditNonceIncrementedServiceDatabaseConnection: 'LetterOfCreditNonceIncrementedServiceDatabaseConnection',
  LetterOfCreditTransitionEventProcessorNotFound: 'LetterOfCreditTransitionEventProcessorNotFound',
  LetterOfCreditIssuedEventHashInvalid: 'LetterOfCreditIssuedEventHashInvalid',
  LetterOfCreditNotFoundInTransitionService: 'LetterOfCreditNotFoundInTransitionService',
  LetterOfCreditNonceIncrementedServiceDoEventFailed: 'LetterOfCreditNonceIncrementedServiceDoEventFailed',
  LetterOfCreditCreatedServiceSaveAsRequestedVerificationPendingFailed:
    'LetterOfCreditCreatedServiceSaveAsRequestedVerificationPendingFailed',
  LetterOfCreditCreatedServiceSaveAsRequestedVerificationFailed:
    'LetterOfCreditCreatedServiceSaveAsRequestedVerificationFailed',
  LetterOfCreditCreatedServiceSaveAsRequested: 'LetterOfCreditCreatedServiceSaveAsRequested',
  LetterOfCreditDocumentToShareNotFound: 'LetterOfCreditDocumentToShareNotFound',
  LetterOfCreditDeleteDocumentFailed: 'LetterOfCreditDeleteDocumentFailed',
  FindLetterOfCreditFailed: 'FindLetterOfCreditFailed',
  ErrorRejectRequestLetterOfCredit: 'ErrorRejectRequestLetterOfCredit',
  TransactionManagerIssueError: 'TransactionManagerIssueError',
  SBLCEmptyMember: 'SBLCEmptyMember'
}

export function generateBlockchainException(error: Error, logger, context = {}) {
  if (error.message.toLowerCase().includes(`invalid json rpc response`)) {
    logger.error(
      ErrorCode.BlockchainConnection,
      ErrorNames.BlockchainConnectionError,
      'Could not connect to blockchain.',
      error.stack,
      {
        message: error.message,
        ...context
      }
    )
    return new BlockchainConnectionException('Could not connect to blockchain.')
  } else {
    logger.error(
      ErrorCode.BlockchainTransaction,
      ErrorNames.BlockchainTransactionError,
      error.message,
      error.stack,
      context
    )
    return new BlockchainTransactionException(`Error when trying to call a smart contract`)
  }
}
