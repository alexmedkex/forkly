stages:
  - build
  - update_and_test
  
docker build and push:
  stage: build
#  image: docker:stable-git # Uncomment this line if Gitlab shared runners
  services:
    - docker:18.09-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375 # Comment this line if Gitlab shared runners
    REPOSITORY_URI: hbr.solutions.consensys-uk.net/komgo
  script:
    - PROJECT_NAME=$(basename `git rev-parse --show-toplevel`)
    - SHORT_SHA=${CI_COMMIT_SHA:0:8}
    - echo "$SHORT_SHA"
    - IMAGE_ID=$(docker build --pull --quiet --tag $PROJECT_NAME:$SHORT_SHA .)
    - |
      if [[ $CI_COMMIT_REF_NAME = "develop" || $CI_COMMIT_REF_NAME = "release"* || $PUBLISH = "true" ]]; then  
        echo $HARBOR_INFRABOT_PASSWORD | docker login $REPOSITORY_URI -u=infrabot --password-stdin        
        docker tag $PROJECT_NAME:$SHORT_SHA $REPOSITORY_URI/$PROJECT_NAME:$SHORT_SHA        
        echo "Pushing to remote repository"
        docker --debug push $REPOSITORY_URI/$PROJECT_NAME:$SHORT_SHA
        rm -f /root/.docker/config.json
      fi
    - docker images
    - docker rmi -f $IMAGE_ID
  only:
    refs:
      - /^release-.*$/
      - develop
      - /^KOMGO-.*$/
      - /^KDH-.*$/
  tags: # Comment this line if Gitlab shared runner
    - docker # Comment this line if Gitlab shared runner

trigger update and e2e test develop branch:
  stage: update_and_test
  variables:
    NUMBER_OF_MEMBERS: 4
    QA_ENV: ci-test
    BRANCH: develop
    COUNTERPARTY: ing-ams
    COMPANY: bp-london
  script:
    - export COMMIT_AUTHOR=$(git show -s --format='%ae' $CI_COMMIT_SHA)
    - branch=$(echo $CI_COMMIT_TITLE | awk '{print $3}' | sed "s/'/ /g" | sed 's/ //g')
    - |
      response=$(curl https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests?state=merged -H "PRIVATE-TOKEN: $GITLAB_API_TOKEN" | jq '.[] | "\(.title) \(.source_branch)"' | (grep "$branch" || true) | head -n 1 | (grep BUILD_FIX || true) | wc -c | sed "s/[^0-9]//g")
      echo $response
      if [ "$response" -ne 0 ]; then
        export BUILD_FIX="true"
      else
        export BUILD_FIX="false"
      fi
    - curl -X POST -F token=$E2E_DEVELOP_TRIGGER_TOKEN -F ref=master -F "variables[DEPLOY_LATEST]=true" -F "variables[NUMBER_OF_MEMBERS]=${NUMBER_OF_MEMBERS}" -F "variables[UPDATE]=true" -F "variables[QA_ENV]=${QA_ENV}" -F "variables[BRANCH]=${BRANCH}" -F "variables[COMMIT_AUTHOR]=${COMMIT_AUTHOR}" -F "variables[COUNTERPARTY]=${COUNTERPARTY}" -F "variables[COMPANY]=${COMPANY}" -F "variables[BUILD_FIX]=${BUILD_FIX}" -F "variables[SOURCE_PIPELINE_URL]=${CI_PIPELINE_URL}" https://gitlab.com/api/v4/projects/9675386/trigger/pipeline
  only:
    refs:
      - develop
  tags:
    - deploy

trigger update and e2e test release branch:
  stage: update_and_test
  variables:
    NUMBER_OF_MEMBERS: 4
    QA_ENV: ci-re
    BRANCH: $CI_COMMIT_REF_NAME
    COUNTERPARTY: ing-ams
    COMPANY: bp-london
  script:
    - export COMMIT_AUTHOR=$(git show -s --format='%ae' $CI_COMMIT_SHA)
    - branch=$(echo $CI_COMMIT_TITLE | awk '{print $3}' | sed "s/'/ /g" | sed 's/ //g')
    - |
      response=$(curl https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/merge_requests?state=merged -H "PRIVATE-TOKEN: $GITLAB_API_TOKEN" | jq '.[] | "\(.title) \(.source_branch)"' | (grep "$branch" || true) | head -n 1 | (grep BUILD_FIX || true) | wc -c | sed "s/[^0-9]//g")
      echo $response
      if [ "$response" -ne 0 ]; then
        export BUILD_FIX="true"
      else
        export BUILD_FIX="false"
      fi
    - curl -X POST -F token=$E2E_RELEASE_TRIGGER_TOKEN -F ref=master -F "variables[DEPLOY_LATEST]=true" -F "variables[NUMBER_OF_MEMBERS]=${NUMBER_OF_MEMBERS}" -F "variables[UPDATE]=true" -F "variables[QA_ENV]=${QA_ENV}" -F "variables[BRANCH]=${BRANCH}" -F "variables[COMMIT_AUTHOR]=${COMMIT_AUTHOR}" -F "variables[COUNTERPARTY]=${COUNTERPARTY}" -F "variables[COMPANY]=${COMPANY}" -F "variables[BUILD_FIX]=${BUILD_FIX}" -F "variables[SOURCE_PIPELINE_URL]=${CI_PIPELINE_URL}" https://gitlab.com/api/v4/projects/9555029/trigger/pipeline
  only:
    refs:
      - /^release-.*$/
  except:
    refs:
      - /^release-test$/
      - schedules
  tags:
    - deploy

