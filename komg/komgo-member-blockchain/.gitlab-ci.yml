stages:
    - setup
    - audit
    - slack_notification
    - test

install deps:
  cache:
    key: node_modules_cache
    paths:
    - node_modules/
  stage: setup
  script:
    - npm install
  only:
    - /^KOMGO-.*$/
    - /^cherry-pick-.*$/
  artifacts:
    paths:
    - node_modules/
  tags:
    - node8

docker build and push:
  stage: test
#  image: docker:stable-git # Uncomment this line if Gitlab shared runners
  services:
    - docker:18.09-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://localhost:2375 # Comment this line if Gitlab shared runners
    REPOSITORY_URI: hbr.solutions.consensys-uk.net/komgo
  script:
    - PROJECT_NAME=$(basename `git rev-parse --show-toplevel`)
    - SHORT_SHA=${CI_COMMIT_SHA:0:8}
    - echo "$SHORT_SHA"
    - IMAGE_ID=$(docker build --build-arg NPM_TOKEN=$NPM_TOKEN --pull --quiet --tag $PROJECT_NAME:$SHORT_SHA .)
    - |
      if [[ $CI_COMMIT_REF_NAME = "develop" || $CI_COMMIT_REF_NAME = "release"* || $PUBLISH = "true" ]]; then
        echo $HARBOR_INFRABOT_PASSWORD | docker login $REPOSITORY_URI -u=infrabot --password-stdin
        IMAGE_ID=$(docker build -f Dockerfile-contracts --build-arg NPM_TOKEN=$NPM_TOKEN --pull --quiet --tag $PROJECT_NAME:$SHORT_SHA .)
        docker tag $PROJECT_NAME:$SHORT_SHA $REPOSITORY_URI/$PROJECT_NAME:$SHORT_SHA
        echo "Pushing to remote repository"
        docker --debug push $REPOSITORY_URI/$PROJECT_NAME:$SHORT_SHA
        rm -f /root/.docker/config.json
      fi
    - docker images
    - docker rmi -f $IMAGE_ID
  only:
    refs:
      - /^release-.*$/
      - develop
      - /^cherry-pick-.*$/
      - /^KOMGO-.*$/
  except:
    - schedules
  tags: # Comment this line if Gitlab shared runner
    - docker # Comment this line if Gitlab shared runner

run audit:
  stage: audit
  # ignore dev tool vulnerabilities (used by solium in devDependencies):
  # - Regular Expression Denial of Service  (https://nodesecurity.io/advisories/786)
  script:
    - |
      if [[ $(npm audit --registry=https://registry.npmjs.org --parseable | grep -v "https://nodesecurity.io/advisories/786" | wc -c) -ne 1 ]]; then
        npm audit --registry=https://registry.npmjs.org
      fi
  only:
  - /^KOMGO-.*$/
  - /^cherry-pick-.*$/
  - develop
  dependencies:
  - install deps
  tags:
  - node8
  allow_failure: true  

run tests:
  stage: test
  script:
    - npm install -g ganache-cli@6.1.8
    - ganache-cli &
    - npm run test:ci
    # ganache-cli as a background job never dies with K8s runner setup so job hangs. Add kill $! to kill it as a post step.
    - kill $!
  except:
    - schedules
  only:
    - /^KOMGO-.*$/
    - /^cherry-pick-.*$/
  tags:
    - node8
    
notify slack on failure:
  stage: slack_notification
  script:
    - echo "CI_PIPELINE_URL $CI_PIPELINE_URL"
    - "curl -X POST \
      https://hooks.slack.com/services/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 \
      -H 'Content-Type: application/json' \
      -d '{
      \"text\": \":warning: CI AUDIT PIPELINE FAILED\",
      \"attachments\": [
        {
        \"author_name\": \"PIPELINE URL: '\"$CI_PIPELINE_URL\"'\",
        \"title\": \"Click here to check pipeline\",
        \"title_link\": \"'\"$CI_PIPELINE_URL\"'\",
        \"color\": \"danger\",
        \"image_url\": \"https://raw.githubusercontent.com/standard/standard/master/docs/logos/npm.png\"
        }
      ]
      }'"
  when: on_failure
  only:
    - schedules
  tags:
    - deploy
