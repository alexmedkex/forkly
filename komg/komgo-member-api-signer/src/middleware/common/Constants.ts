export enum ACTIONS {
  GENERATE_ONE_TIME_KEY = 'GenerateOnetimeKey',
  POST_TRANSACTION = 'PostTransaction',
  ETH_GET_KEY = 'ETHGetNewKey',
  ETH_CREATE_NEW_KEY = 'ETHCreateNewKey',
  ETH_CREATE_NEW_ONETIME_KEY = 'ETHCreateNewOneTimeKey',
  INIT_KEY_DAT = 'InitKeyData',
  RSA_CREATE_KEY = 'RSACreateKey',
  RSA_GET_KEY = 'RSAGetKey',
  SEND_TX = 'SendTx',
  SIGN_TX = 'SignTx',
  ETH_SIGN = 'ETHSign',
  VERIFY_TX = 'VerifyTx',
  ENCRYPT = 'Encrypt',
  DECRYPT = 'Decrypt',
  RSA_VERIFY = 'RSAVerify',
  RSA_SIGN = 'RSASign',
  RSA_ENCRYPT = 'RSAEncrypt',
  RSA_DECRYPT = 'RSADecrypt',
  BUILD_RAW_PUBLIC_TX = 'BuildRawPublicTx',
  BUILD_RAW_PRIVATE_TX = 'BuildRawPrivateTx',
  UPDATE_TX_NONCE = 'UpdateTxNonce',
  UNLOCK_ACCOUNT = 'UnlockAccount',
  RETRY_TX = 'RetryTx',
  BUILD_INDEX = 'BUILD_INDEX'
}

export enum ErrorName {
  NoKeyData = 'NoKeyData',
  NoETHKeyData = 'NoETHKeyData',
  VerifyUnconfirmed = 'VerifyUnconfirmedTransactionsFailed',
  RetryTx = 'RetryTxFailed',
  SendTx = 'SendTxFailed',
  SendTxReverted = 'SendTxReverted',
  InitKeyDataInvalidFile = 'InitKeyFromFileFailed',
  RSASign = 'RSASignTxFailedInvalidRequest',
  ETHSign = 'ETHSignTxFailedInvalidRequest',
  ETHSimpleSign = 'ETHSimpleSignTxFailedInvalidRequest',
  RSACheckSignature = 'RSACheckSignatureFailed',
  ETHCheckSignature = 'ETHCheckSignatureFailed',
  GenerateOneTimeKey = 'OneTimeKeyGenFailed',
  ETHCreateKey = 'ETHCreateKeyFailed',
  RSACreateKey = 'RSACreateKeyFailed',
  ParseRSAKey = 'ParseRSAKeyFailed',
  SendPrivateTx = 'SendPrivateTransactionFailed',
  CompanyKeyProviderInitKeyData = 'CompanyKeyProviderInitKeyDataFailed',
  ETHKeyNotFound = 'ETHKeyNotFound',
  RSAKeyNotFound = 'RSAKeyNotFound',
  PostTx = 'PostPrivateTxFailed',
  PostPublicTx = 'PostPublicTxFailed',
  BuildPublicTx = 'BuildPublicTxFailed',
  ETHDecrypt = 'ETHDecryptFailed',
  RSADecrypt = 'RSADecryptFailed',
  ETHEncrypt = 'ETHEncryptFailed',
  RSAEncrypt = 'RSAEncryptFailed',
  InvalidRequestOrigin = 'InvalidRequestOrigin',
  BuildDatabaseIndex = 'DatabaseBuildIndexFailed',
  PublishMQ = 'PublishMessageFailed',
  UnlockAccount = 'UnloPublishMQckAccountFailed',
  VaultIsNotAvailable = 'VaultIsNotAvailable',
  VaultAuthFailed = 'VaultAuthFailed',
  VaultWriteKVFailed = 'VaultWriteKVFailed',
  VaultReadKVFailed = 'VaultReadKVFailed'
}
